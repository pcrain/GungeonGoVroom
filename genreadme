#!/usr/bin/python

import sys, os, re

CUR_DIR = os.path.dirname(os.path.abspath(__file__))
TEMPLATE = os.path.join(CUR_DIR, "readme.template.md")
OUTPUT = os.path.join(CUR_DIR, "readme.md")
CHANGES = os.path.join(CUR_DIR, "src", "ConfigMenu.cs")

def formatChanges(changes):
  formatted = []
  for c in changes:
    formatted.append(f"  - **{c[0]}**: {c[1].replace("\\n", " ")}")
  return "\n".join(formatted)

def main():
  with open(TEMPLATE, 'r') as fin:
    ts = fin.read()

  bugfixes   = []
  safe       = []
  aggressive = []
  keys       = {}

  key_rx = re.compile(r'''^\s*internal const string ([^\s]*)\s*= \"(.*)\";.*$''')
  desc_rx = re.compile(r'''^\s*(sf|so|ao)\.FancyToggle(?:Off)?\((.*), \"(.*)\"\);.*$''')
  with open(CHANGES, 'r') as fin:
    for line in fin.read().split("\n"):
      if m := key_rx.match(line):
        keys[m.groups()[0]] = m.groups()[1]
      if m := desc_rx.match(line):
        groups = m.groups()
        t = groups[0]
        if t == "sf":
          bugfixes.append((keys[groups[1]], groups[2]))
        elif t == "so":
          safe.append((keys[groups[1]], groups[2]))
        elif t == "ao":
          aggressive.append((keys[groups[1]], groups[2]))
        else:
          print(line)

  formatData = {
    "bugfixes"   : formatChanges(bugfixes),
    "safe"       : formatChanges(safe),
    "aggressive" : formatChanges(aggressive),
  }
  parsed = ts.format(**formatData)
  with open(OUTPUT, 'w') as fout:
    fout.write(parsed)
  pass

if __name__ == "__main__":
  main()
